"Asm.fif" include
"Color.fif" include
"TonUtil.fif" include

0 =: to_wc
x{8C56E35AC7BABB8610E66A846A690A4F8C42CA5DAB1FF021BA3546E1C401600E} =: to_addr

"contract-code.fif" include =: code
<b b> =: body
<b 
    <b x{010000100} s, to_wc 8 i, to_addr s, 0 111 u, 
        body <s 2dup s-fits? not rot over 1 i, -rot { drop body ref, } { s, } cond
    b> ref,
b> =: message
newkeypair drop 16 B| drop =: random
<b random B, b> =: storage

storage <s csr.

0 tuple 0x076ef1ea , // magic
0 , 0 , // actions msg_sents
1570470873 , // unix_time
1 , 1 , 0 , // block_lt, trans_lt, rand_seed
0 tuple 9223372036854775807 , dictnew , , // remaining balance
0 , dictnew , // contract_address, global_config
1 tuple // wrap to another tuple
constant c7 

message <s recv_external code <s storage c7 runvmctx .s

<b b{0011} s, code ref, storage ref, dictnew dict, b> =: StateInit
0 StateInit hashu 2constant wallet_addr

^White ."The wallet address: " ^reset wallet_addr .addr cr
^White ."Non-bounceable (for init): " ^reset wallet_addr 7 .Addr cr
^White ."Bounceable (for later access): " ^reset wallet_addr 6 .Addr cr

<b b{1000100} s, wallet_addr addr, b{000010} s, StateInit <s s, b{0} s, message <s s, b> constant external_message
external_message boc>B "query.boc" B>file