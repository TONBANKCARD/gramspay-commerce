// automatically generated from `/Users/dkaraush/ton/crypto/smartcont/stdlib.fc` `./code.fc` 
PROGRAM{
  DECLPROC balance
  DECLPROC recv_internal
  DECLPROC recv_external
  DECLPROC orders
  101642 DECLMETHOD status
  82710 DECLMETHOD earning
  100194 DECLMETHOD data
  85143 DECLMETHOD seqno
  balance PROC:<{
    BALANCE
    FIRST
  }>
  recv_internal PROC:<{
    s2 PUSH
    500000000 PUSHINT
    LESS
    IFJMP:<{
      3 BLKDROP
    }>
    SWAP
    CTOS
    4 LDU
    NIP
    LDMSGADDR
    DROP
    REWRITESTDADDR
    c4 PUSH
    CTOS
    272 PUSHINT
    LDSLICEX
    LDDICT
    DROP
    s0 s4 XCHG
    SHA256U
    32 PUSHPOW2DEC
    AND
    s0 s4 PUSH2
    32 PUSHINT
    DICTUGET
    NULLSWAPIFNOT
    0 PUSHINT
    SWAP
    IF:<{
      DROP
      1 LDU
      SWAP
      90 THROWIFNOT
      296 PUSHINT
      SDSKIPFIRST
      64 LDU
      DROP
    }>ELSE<{
      NIP
    }>
    s0 s6 XCHG2
    ADD
    NOW
    14400 PUSHINT
    ADD
    1 PUSHINT
    NEWC
    1 STU
    32 STU
    s1 s4 XCHG
    8 STI
    s1 s2 XCHG
    256 STU
    s1 s2 XCHG
    64 STU
    ENDC
    CTOS
    2SWAP
    32 PUSHINT
    DICTUSET
    NEWC
    ROT
    STSLICER
    STDICT
    ENDC
    c4 POP
  }>
  recv_external PROC:<{
    LDREF
    DROP
    CTOS
    c4 PUSH
    CTOS
    SWAP
    8 LDU
    s0 s2 XCHG
    256 LDU
    s2 PUSH
    4 EQINT
    IFNOT:<{
      s0 s3 XCHG
      9 PUSHPOW2
      LDSLICEX
      DUP
      HASHSU
      s0 s2 s3 XC2PU
      CHKSIGNU
      51 THROWIFNOT
      s0 s3 XCHG
    }>
    16 LDU
    s0 s4 XCHG
    16 LDU
    s2 s1 PUXC
    EQUAL
    50 THROWIFNOT
    s3 PUSH
    4 EQINT
    IFNOT:<{
      ACCEPT
    }>
    s0 s4 XCHG
    LDDICT
    DROP
    s3 PUSH
    0 EQINT
    s4 PUSH
    11 EQINT
    OR
    IFNOT:<{
      s0 s4 XCHG
      32 LDU
      s4 PUSH
      4 EQINT
      s5 PUSH
      1 EQINT
      OR
      IF:<{
        s1 s5 PUXC
        32 PUSHINT
        DICTUDELGET
        NULLSWAPIFNOT
        s6 PUSH
        4 EQINT
        IF:<{
          SWAP
          1 LDU
          s2 PUSH
          52 THROWIFNOT
          SWAP
          53 THROWIFNOT
          32 LDU
          NOW
          s1 s2 XCHG
          LESS
          54 THROWIFNOT
          ACCEPT
        }>ELSE<{
          SWAP
          33 PUSHINT
          SDSKIPFIRST
        }>
        SWAP
        IF:<{
          0 PUSHINT
          196 PUSHINT
          NEWC
          9 STU
          s0 s2 XCHG
          264 PUSHINT
          LDSLICEX
          s3 s3 XCHG2
          STSLICER
          s0 s2 XCHG
          64 LDU
          DROP
          s1 s2 XCHG
          STGRAMS
          108 STU
          ENDC
          2 PUSHINT
          SENDRAWMSG
        }>ELSE<{
          DROP
        }>
        s0 s5 XCHG
      }>
      s4 PUSH
      2 EQINT
      IF:<{
        s1 s5 PUXC
        32 PUSHINT
        DICTUDELGET
        NULLSWAPIFNOT
        55 THROWIFNOT
        297 PUSHINT
        SDSKIPFIRST
        64 LDU
        DROP
        0 PUSHINT
        196 PUSHINT
        NEWC
        9 STU
        s0 s8 XCHG
        264 PUSHINT
        LDSLICEX
        s9 s9 XCHG2
        STSLICER
        s0 s2 XCHG
        100 PUSHINT
        DIV
        98 MULCONST
        s1 s2 XCHG
        STGRAMS
        108 STU
        ENDC
        2 PUSHINT
        SENDRAWMSG
        s0 s5 XCHG
      }>
      s4 PUSH
      3 EQINT
      IF:<{
        s1 s5 PUSH2
        32 PUSHINT
        DICTUGET
        NULLSWAPIFNOT
        56 THROWIFNOT
        1 PUSHINT
        SDSKIPFIRST
        0 PUSHINT
        NEWC
        1 STU
        SWAP
        360 PUSHINT
        LDSLICEX
        DROP
        STSLICER
        ENDC
        CTOS
        s0 s0 s6 XCHG3
        32 PUSHINT
        DICTUSET
        s0 s4 XCHG
      }>ELSE<{
        NIP
      }>
      s0 s4 XCHG
    }>
    s0 s3 XCHG
    11 EQINT
    IF:<{
      1000000000 PUSHINT
      -1 PUSHINT
      UNTIL:<{
        s4 PUSH
        32 PUSHINT
        DICTUGETNEXT
        NULLSWAPIFNOT2
        DUP
        IF:<{
          s0 s2 XCHG
          297 PUSHINT
          SDSKIPFIRST
          64 LDU
          DROP
          s1 s3 XCHG
          ADD
          s0 s2 XCHG
        }>ELSE<{
          s2 POP
        }>
        SWAP
        NOT
      }>
      DROP
      balance CALLDICT
      SWAP
      SUB
      DUP
      0 GTINT
      IF:<{
        0 PUSHINT
        196 PUSHINT
        NEWC
        9 STU
        s0 s6 XCHG
        264 PUSHINT
        LDSLICEX
        DROP
        s1 s6 XCHG
        STSLICER
        SWAP
        STGRAMS
        s1 s4 XCHG
        108 STU
        ENDC
        2 PUSHINT
        SENDRAWMSG
      }>ELSE<{
        DROP
        s3 POP
      }>
    }>ELSE<{
      s3 POP
    }>
    s0 s2 XCHG
    INC
    s0 s2 XCHG
    NEWC
    256 STU
    s1 s2 XCHG
    16 STU
    STDICT
    ENDC
    c4 POP
  }>
  orders PROC:<{
    c4 PUSH
    CTOS
    272 PUSHINT
    SDSKIPFIRST
    LDDICT
    DROP
  }>
  status PROC:<{
    orders CALLDICT
    32 PUSHINT
    DICTUGET
    NULLSWAPIFNOT
    IFNOTJMP:<{
      DROP
      -1 PUSHINT
    }>
    1 LDU
    SWAP
    0 EQINT
    IFJMP:<{
      DROP
      0 PUSHINT
    }>
    32 LDU
    DROP
    NOW
    LESS
    IFJMP:<{
      1 PUSHINT
    }>
    2 PUSHINT
  }>
  earning PROC:<{
    orders CALLDICT
    1000000000 PUSHINT
    -1 PUSHINT
    UNTIL:<{
      s2 PUSH
      32 PUSHINT
      DICTUGETNEXT
      NULLSWAPIFNOT2
      DUP
      IF:<{
        s0 s2 XCHG
        297 PUSHINT
        SDSKIPFIRST
        64 LDU
        DROP
        s1 s3 XCHG
        ADD
        s0 s2 XCHG
      }>ELSE<{
        s2 POP
      }>
      SWAP
      NOT
    }>
    DROP
    NIP
    balance CALLDICT
    SWAP
    SUB
  }>
  data PROC:<{
    orders CALLDICT
    -1 PUSHINT
    NIL
    UNTIL:<{
      s1 s2 XCPU
      32 PUSHINT
      DICTUGETNEXT
      NULLSWAPIFNOT2
      DUP
      IF:<{
        NIL
        s2 PUSH
        TPUSH
        s0 s3 XCHG
        1 LDU
        s4 s4 XCHG2
        TPUSH
        s0 s3 XCHG
        32 LDU
        s4 s4 XCHG2
        TPUSH
        s0 s3 XCHG
        8 LDI
        s4 s4 XCHG2
        TPUSH
        s0 s3 XCHG
        256 LDSLICE
        s4 s4 XCHG2
        TPUSH
        s0 s3 XCHG
        64 LDU
        DROP
        s1 s3 XCHG
        TPUSH
        s1 s3 XCHG
        TPUSH
        s0 s2 XCHG
      }>ELSE<{
        s2 POP
      }>
      SWAP
      NOT
      s1 s2 XCHG
    }>
    2 1 BLKDROP2
  }>
  seqno PROC:<{
    c4 PUSH
    CTOS
    8 PUSHPOW2
    SDSKIPFIRST
    16 LDU
    DROP
  }>
}END>c
